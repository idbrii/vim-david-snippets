snippet var "Unity: Tunable variable with tooltip" b
[Tooltip("${3:description}")]
public ${1:type} ${2:name};
$0
endsnippet

snippet pub "Unity: Public but not editor-visible variable." b
[HideInInspector]
public ${1:type} ${2:name};
$0
endsnippet

# Second line must be moved to Start().
snippet comp "Unity: Cached component" b
private ${1:type} ${2:name};
$2 = GetComponent<$1>();$0
endsnippet

snippet log "Unity: Debug log message" b
Debug.Log(${1:string.Format("{0} {1}$2", $3)}, ${4:this});$0
endsnippet

snippet err "Unity: Debug error message" b
Debug.LogError(${1:msg}, ${2:this});$0
endsnippet

# Requires my Dbg debugging "library".
snippet assert "Unity: My assert" b
Dbg.Assert(${1:predicate}, ${2:msg});$0
endsnippet

snippet stack "Print a stack trace" b
Debug.LogError("`!v g:snips_author` ${1:}", ${2:null});$0
endsnippet

snippet inheader "Header section for inspector" b
[Header("${1:heading}")]
endsnippet

snippet inspace "Spacer section for inspector" b
[Space(${1:10})]
endsnippet

snippet debugdraw "Debug draw to MonoBehaviour" b
void OnGUI()
{
	GUILayout.BeginVertical();
	{
		GUILayout.Label(string.Format(${1:"x={0} y={1}", x, y}$0));
	}
}
endsnippet

