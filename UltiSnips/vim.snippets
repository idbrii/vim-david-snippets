snippet ifvar "If a variable exists and is greater than 0"
if exists("g:${1:variable}") && g:$1 > 0${2}
endsnippet

snippet ifnovar "If a variable doesn't exist or is equal than 0"
if !exists("g:${1:variable}") || g:$1 == 0${2}
endsnippet

snippet ifnomaps "Guard to prevent map defs"
if !exists("g:${1:`!v Filename()`}_no_mappings") || !g:$1_no_mappings${2}
endsnippet

snippet ifnoexist "Define a variable if undefined"
if !exists("${1:g}:${2:`!v Filename()`}_${3:var}")
	let $1:$2_$3 = ${4:value}
endif${5}
endsnippet

snippet ifhasmapto "ifhasmapto"
if !hasmapto('<Plug>`!v substitute(Filename(), '\v(^\w)', '\u\1', '')`${1:Command}')
	${2:n}map ${3:<buffer> }<${4:LocalLeader}>${5:lhs} <Plug>`!v substitute(Filename(), '\v(^\w)', '\u\1', '')`$1
endif${6}
endsnippet

snippet header "header"
" File: ${1:`!v expand('%:t')`}
" Author: ${2:`!v g:snips_author`}
" Description: ${3}
${4:" Last Modified: `!v strftime("%B %d, %Y")`}
endsnippet

snippet guard "guard"
if exists('${1:loaded_`!v Filename()`}') || &cp${2: || version < 700}
	finish
endif
let $1 = 1${3}
endsnippet

snippet function "function"
function! ${1:`!v expand('%') =~ 'autoload' ? substitute(matchstr(expand('%:p'),'autoload/\zs.*\ze.vim'),'[/\\]','#','g').'#' : ''`}${2:function_name}(${3})
	${4:" code}
endf${5}
endsnippet

snippet try "try"
try
	${1}
catch ${2}
	${3}
endtry${4}
endsnippet

snippet for "for"
for ${1:needle} in ${2:haystack}
	${3:" code}
endfor${4}
endsnippet

snippet while "while"
while ${1:condition}
	${2:" code}
endw${3}
endsnippet

snippet if "if"
if ${1:condition}
	${2:" code}
endif${3}
endsnippet

snippet ife "ife"
if ${1:condition}
	${2}
else
	${3}
endif${4}
endsnippet

snippet augroup "augroup"
augroup ${1:AU_NAME}
	" this one is which you're most likely to use?
	autocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${4}
augroup end${5}
endsnippet


