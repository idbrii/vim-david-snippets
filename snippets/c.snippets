# quick matching braces
snippet {
	{
		${1}
	}
# main()
snippet main
	int main(${1:int argc, const char *argv[]})
	{
		${2}
		return 0;
	}
snippet include
	#include "${1:`Filename("$1.h")`}"${2}
# #ifndef ... #define ... #endif
snippet defndef define if not defined
	#ifndef $1
	#define ${1:SYMBOL} ${2:value}
	#endif${3}
snippet ifdef
	#ifdef ${1:SYMBOL}
		${2:#define }
	#endif
snippet #if
	#if ${1:FOO}
		${2}
	#endif
# Header Include-Guard
snippet once
	#ifndef ${1:`toupper(Filename('$1_H', 'UNTITLED_H'))`}

	#define $1

	${2}

	#endif /* end of include guard: $1 */
# If Condition
snippet if
	if (${1:/* condition */}) {
		${2:/* code */}
	}${3}
# Do While Loop
snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});${3}
# While Loop
snippet wh
	while (${1:/* condition */}) {
		${2:/* code */}
	}${3}
# For Loop
snippet fo Indexed for-loop
	for (int ${2:i} = 0; $2 < ${1:count}; ++$2) ${3}
snippet for Custom for-loop
	for (${1}; ${2}; ${3}) ${4}
# Function
snippet fun
	${1:void} ${2:function_name}(${3})
	{
		${4:/* code */}
	}${5}
# Function Declaration
snippet fund
	${1:void} ${2:function_name}(${3});${4}
# Typedef
snippet td
	typedef ${1:int} ${2:MyCustomType};${3}
# Function pointer
snippet fptr Function pointer
	${1:return_type} (${2:function_name})(${3: /* arg types */ })${4: = NULL};${5}
# Struct
snippet st
	struct ${1:`Filename('$1_t', 'name')`} {
		${2:/* data */}
	}${3: /* optional variable list */};${4}
